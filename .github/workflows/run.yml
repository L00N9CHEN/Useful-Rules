name: Generate shadowrocket rules

on:
  workflow_dispatch:
  schedule:
    - cron: "00 00 * * *"
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Tiktok.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Semporia/TikTok-Unlock/master/Shadowrocket/TikTok.list | sed '1,2 d' > TikTok.list
          
      - name: Generate icloud.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/icloud.txt | sed 's/^[^:]*:/DOMAIN-SUFFIX,/' > icloud.list
      
      - name: Generate apple.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf | sed 's/^server=\/\(.*\)\/114\.114\.114\.114$/DOMAIN-SUFFIX,\1/' > apple.list
      
      - name: Generate tld-not-cn.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/tld-!cn.txt | sed 's/^[^:]*:/./' > tld-not-cn.list
      
      - name: Generate private.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/private.txt | sed 's/^[^:]*:/DOMAIN-SUFFIX,/' > private.list
      
      - name: Generate reject.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt | sed 's/^[^:]*:/DOMAIN-SUFFIX,/' > reject.list
      
      - name: Generate proxy.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt | sed 's/^[^:]*:/DOMAIN-SUFFIX,/' > proxy.list
      
      - name: Generate direct.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt | sed 's/^[^:]*:/DOMAIN-SUFFIX,/' > direct.list
      
      - name: Generate gfw.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/gfw.txt | sed 's/^[^:]*:/DOMAIN-SUFFIX,/' > gfw.list
      
      - name: Generate cncidr.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt | sed 's/^/IP-CIDR,/' > cncidr.list
      
      - name: Generate lancidr.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/private.txt | sed 's/^/IP-CIDR,/' > lancidr.list
      
      - name: Generate telegramcidr.list file
        run: |
          curl -sSL https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/telegram.txt | sed 's/^/IP-CIDR,/' > telegramcidr.list
      
      - name: Move files to rules directory
        run: |
          mkdir -p rules
          cp *.list ./rules/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: rules
          path: ./rules/

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:     
      - name: Configure variable names
        run: |
          echo "RELEASE_NAME=Built on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          mkdir -p rules

      - name: Download artifact 
        uses: actions/download-artifact@v3
        with:
          name: rules
          path: ./rules

      - name: Publish and upload artifacts
        uses: softprops/action-gh-release@v0.1.15
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./rules/*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Upload artifact to "release" branch
        run: |
          cd rules || exit 1
          git init
          git config --local user.name ${{ secrets.USER_NAME }}
          git config --local user.email ${{ secrets.USER_EMAIL }}
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.ACCESS_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Purge jsdelivr CDN
        run: |
          cd rules || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
